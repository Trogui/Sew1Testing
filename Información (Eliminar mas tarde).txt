referencias: 
	-https://itnext.io/react-understanding-state-lifecycle-d45df5d2cf3f
	-https://reactjs.org/
	-https://es.wikipedia.org/wiki/React
	-https://www.javatpoint.com/pros-and-cons-of-react



¿Qué es React?

React es una biblioteca Javascript de código abierto diseñada para crear interfaces de usuario con el objetivo de facilitar el desarrollo de aplicaciones en una sola página.
Es mantenido por Facebook y la comunidad de software libre. En el proyecto hay más de mil desarrolladores libres.  

¿Para qué sirve React?

React intenta ayudar a los desarrolladores a construir aplicaciones que usan datos que cambian todo el tiempo. Su objetivo es ser sencillo, declarativo y fácil de combinar. React sólo maneja la interfaz de usuario en una aplicación; React es la Vista en un contexto en el que se use el patrón MVC (Modelo-Vista-Controlador) o MVVM (Modelo-vista-modelo de vista). También puede ser utilizado con las extensiones de React-based que se encargan de las partes no-UI (que no forman parte de la interfaz de usuario) de una aplicación web. 

¿Cuándo aparece React?

Lanzado en marzo de 2013 y creado por Jordan Walke Ingeniero de Software en Facebook, la primera implementación fue en el timeline de Facebook, buscaban una manera optima y rápida de cargar los contenidos en su red social, empezaron a mejorar poco a poco la librería hasta la actualidad de esta artículo se encuentra en su versión 16.4.2.


Caracteristicas

React tiene diferentes características que lo hace uno de los frameworks mas usados en el ámbito frontend, está en un claro top 3 junto a angular y vue y cada vez se destaca mas como sólido top 1.

Algunas de las más importantes pueden ser:
	- Virtual DOM: React conserva un dom virtual propio, el cual es comparado con 	el DOM del navegador para determinar como actualizarlo de forma eficiente para compensar los cambios entre versiones

	- Componentes y Propiedades(props):Los componentes te dejan dividir la 	interfaz de usuario en piezas independientes y reusables. Son similares a las 	funciones de java , aceptan inputs denominados "props" y retornan elementos que describen lo que debería aparecer en pantalla.

	- Estado: El estado es la representación de un componente en un momento concreto. Existen dos tipos de componentes, statefull ( con estado ) y stateless ( sin estado )
	- Ciclo de vida: El ciclo de vida es una consecuencia de estados por la cual tienen que pasar todos los componentes a lo largo de su existencia. Se divide en 3 etapas, inicialización,actualización y destrucción.

	- Hooks: {definir hooks}

